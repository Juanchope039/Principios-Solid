# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- azurePipelines

pr:
- develop
- quality

pool:
  vmImage: ubuntu-latest
  Image: ubuntu-latest
#  name: Default

steps:
- checkout: none
  clean: true
  persistCredentials: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      git clone $(repoGitHub) p
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Cloning GitHub Repo'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      git switch azurePipelines

      git remote add github $(repoGitHub)
      git remote add azure $(repoAzure)
    workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Settings remote Repo'

#      git config â€“global core.longpaths true
#      git config --global --add url."git@github.com:".insteadOf "https://github.com/"
##########

- script: |
      echo git pull azure $(branchName)
      git pull azure $(branchName)
  workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Settings pull Repo'

- script: |
      echo git config --global
      
      git config --global user.email "$(email)"
      git config --global user.name "$(name)"
  workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Configure Tokens'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
              set -x
              git config --global credential.helper 'cache --timeout 600'
              << eof tr -d ' ' | git credential-cache store
                protocol=https
                host=github.com
                username=$(userNameGitHub)
                password=${GITHUB_TOKEN}
              eof
    workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
    bashEnvValue: 'GITHUB_TOKEN: $(gitHubPath)'
    displayName: 'Cache GitHub credentials.'

- script: |
      echo git push github $(branchName)
      git push github $(branchName)
  workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Settings push Repo'