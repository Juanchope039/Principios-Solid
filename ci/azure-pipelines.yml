# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- azurePipelines

pr:
- develop
- quality

pool:
  vmImage: ubuntu-latest
  name: Default

steps:
- checkout: self
  lfs: true
  clean: false
  persistCredentials: true

#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      dir
      git clone https://github.com/Juanchope039/Principios-Solid.git p
      cd p 
      git checkout -b $(branchName)
      git pull origin $(branchName)
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Cloning GitHub Repo'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      git rebase develop
      git pull origin $(branchName)
    workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'rebase develop'
  condition: failed()

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo dir 
      dir
    workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'test'
  condition: succeededOrFailed()

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo git config --global
      git config --global user.email "juanchope039@gmail.com"
      git config --global user.name "Juan David Garzón Vallejo"

      echo git remote add github https://github.com/Juanchope039/Principios-Solid.git 
      git remote add github https://github.com/Juanchope039/Principios-Solid.git 

      echo git fetch github
      git fetch github
    workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Setting GitHub credentials'
  condition: succeededOrFailed()

- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/.git/'
    Contents: '**'
    RemoveDotFiles: true
  condition: succeededOrFailed()

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/p'
  condition: succeededOrFailed()
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      dir
      
      echo git add .
      git add .
      echo git commit -am "new Release Of Azure Dev ops to $(branchName)"
      git commit -am "new Release Of Azure Dev ops to $(branchName)"
      
      echo git status 
      git status
      echo git pull github $(branchName) 
      git pull github $(branchName)
      
      echo git status 
      git status
      echo git switch -c  $(branchName)
      git switch -c $(branchName)
      echo git remote -v
      git remote -v
    workingDirectory: '$(Build.ArtifactStagingDirectory)/p'
  displayName: 'Setting GitHub account'
  condition: succeededOrFailed()

#    echo git push github HEAD:$(branchName) 
#    git push github HEAD:$(branchName)

#    echo git -M $(branchName) 
#    git -M $(branchName) 

#- task: GitHubComment@0
#  inputs:
#    gitHubConnection: 'GitHub principios Solid'
#    repositoryName: 'Juanchope039/Principios-Solid'
#    comment: 'se genera una nueva contribución atraves de azure'